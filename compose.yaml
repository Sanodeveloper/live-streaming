services:
  live:
    ports:
      - "5173:5173"
    volumes:
      - type: bind
        source: ./live_streaming
        target: /live_streaming
    build:
      context: .
      dockerfile: ./live_streaming/Dockerfile
    command: /bin/bash -c "cd /live_streaming && npm run dev"
    stdin_open: true
    tty: true

  api:
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./api_server
        target: /api_server
    build:
      context: .
      dockerfile: ./api_server/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    command: /bin/bash -c "go build && ./api"
    stdin_open: true
    tty: true

  socket:
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./socket_server
        target: /socket_server
    build:
      context: .
      dockerfile: ./socket_server/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    command: /bin/bash -c "go build && ./socket"
    stdin_open: true
    tty: true

  mysql:
    ports:
      - "3306:3306"
    build:
      context: .
      dockerfile: ./db/mysql/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/root_password
      MYSQL_DATABASE: liveapp
      MYSQL_USER: live_user
      MYSQL_PASSWORD_FILE: /run/secrets/user_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$(cat /run/secrets/root_password)"]
      interval: 1s
      timeout: 3s
      retries: 15
    volumes:
      - type: volume
        source: mysql-volume
        target: /var/lib/mysql
    stdin_open: true
    tty: true
    secrets:
      - root_password
      - user_password

  migrator:
    build:
      context: .
      dockerfile: ./db/migrator/Dockerfile
    environment:
      DB_HOST: mysql
      DB_NAME: liveapp
      DB_PORT: "3306"
      DB_USERNAME: live_user
    depends_on:
      mysql:
        condition: service_healthy
    command: /bin/bash -c "/migrator/migrate.sh $$DB_HOST $$DB_PORT $$DB_NAME $$DB_USERNAME /run/secrets/user_password up"
    secrets:
      - user_password

secrets:
  root_password:
    file: ./db/secrets/root_password
  user_password:
    file: ./db/secrets/user_password

volumes:
  mysql-volume: